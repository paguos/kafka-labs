apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-03-19T09:14:44Z"
  generation: 1
  labels:
    app: cp-kafka-connect
    chart: cp-kafka-connect-0.1.0
    heritage: Helm
    release: cp
  name: cp-cp-kafka-connect
  namespace: kafka
  resourceVersion: "17786"
  selfLink: /apis/apps/v1/namespaces/kafka/deployments/cp-cp-kafka-connect
  uid: eaaa496d-1a62-4ac5-a70d-772044c9610f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cp-kafka-connect
      release: cp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "5556"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: cp-kafka-connect
        release: cp
    spec:
      containers:
      - command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-kafka-connect/jmx-kafka-connect-prometheus.yml
        image: solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
        imagePullPolicy: IfNotPresent
        name: prometheus-jmx-exporter
        ports:
        - containerPort: 5556
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/jmx-kafka-connect
          name: jmx-config
      - env:
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: PLAINTEXT://cp-cp-kafka-headless:9092
        - name: CONNECT_GROUP_ID
          value: cp
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: cp-cp-kafka-connect-config
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: cp-cp-kafka-connect-offset
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: cp-cp-kafka-connect-status
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://cp-cp-schema-registry:8081
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://cp-cp-schema-registry:8081
        - name: KAFKA_HEAP_OPTS
          value: -Xms512M -Xmx512M
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: "3"
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_KEY_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: "3"
        - name: CONNECT_PLUGIN_PATH
          value: /usr/share/java,/usr/share/confluent-hub-components
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: "3"
        - name: CONNECT_VALUE_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: KAFKA_JMX_PORT
          value: "5555"
        image: custom-kafka-connect:test
        imagePullPolicy: IfNotPresent
        name: cp-kafka-connect-server
        ports:
        - containerPort: 8083
          name: kafka-connect
          protocol: TCP
        - containerPort: 5555
          name: jmx
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: cp-cp-kafka-connect-jmx-configmap
        name: jmx-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-03-19T10:23:37Z"
    lastUpdateTime: "2020-03-19T10:27:08Z"
    message: ReplicaSet "cp-cp-kafka-connect-6cf74884f5" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-03-20T10:06:52Z"
    lastUpdateTime: "2020-03-20T10:06:52Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1